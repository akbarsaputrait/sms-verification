<?php

namespace App\Http\Controllers;

use App\User;
use Illuminate\Http\Request;
use PHPUnit\Framework\MockObject\Stub\Exception;
use Twilio\Rest\Client;
use Ramsey\Uuid\Uuid;
use Twilio\Http\Response;

define('ACCOUNT_SID', config('app.twilio')['TWILIO_ACCOUNT_SID']);
define('AUTH_TOKEN', config('app.twilio')['TWILIO_AUTH_TOKEN']);
define('SERVICE_ID', config('app.twilio')['TWILIO_SERVICE_SID']);

class VerificationController extends Controller
{

    public function index()
    {
        return view('sms_verification.send');
    }

    public function check()
    {
        if (!session()->has('sended')) {
            return redirect()->route('sms');
        }
        return view('sms_verification.validate');
    }

    /**
     * Send SMS Verification Code
     *
     * The verification code will auto generated by twilio
     * You can get the service id on https: //www.twilio.com/console/verify/services
     *
     * https: //www.twilio.com/docs/verify/api-beta/verification-check-beta
     * API Reference -> Verifications
     *
     */
    public function sendSms(Request $request)
    {
        // Check if user has ben registered (Phone Number or Email)
        // if(User::where('mobileNumber', $request->mobileNumber)->orWhere('email', $request->email)->exists()) {
        //     session()->flash('unvalidate');
        //     return redirect()->route('sms');
        // }

        try {
            $client = new Client(ACCOUNT_SID, AUTH_TOKEN);

            $send = $client
                ->verify
                ->v2
                ->services(SERVICE_ID)
                ->verifications
                ->create($request->mobileNumber, "sms");

            if ($send->sid) {
                $user = new User;
                $user->userid = Uuid::uuid4()->getHex();
                $user->fullName = $request->fullName;
                $user->email = $request->email;
                $user->mobileNumber = $request->mobileNumber;
                $user->verified = false;
                $user->save();
            }
        } catch (Exception $e) {
            $e->getMessage();
        }

        session()->flash('sended', true);
        return redirect()->route('check', ['uuid' => $user->userid]);
    }


    /**
     * Check Status of Verification Code
     *
     * https: //www.twilio.com/docs/verify/api-beta/verification-check-beta
     * API Reference -> Verification Check
     *
    */
    public function checkVerification(Request $request)
    {
        try {
            $user = User::find($request->uuid);

            $client = new Client(ACCOUNT_SID, AUTH_TOKEN);

            $check = $client
                ->verify->v2->services(SERVICE_ID)
                ->verificationChecks
                ->create($request->code,
                    array("to" => $user->mobileNumber)
                );
        } catch (Exception $e) {
            $e->getMessage();
        }

        if(!$check->valid) {
            session()->flash('failed');
            session()->flash('sended');
            return redirect()->route('check', ['uuid' => $request->uuid]);
        } else {
            $user->verified = true;
            $user->save();

            session()->flash('verified', true);
            return redirect()->route('sms');
        }
    }
}
